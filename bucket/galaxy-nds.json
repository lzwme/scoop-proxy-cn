{
  "homepage": "https://github.com/TBemme/galaxy-integration-nds",
  "version": "0.1.0",
  "depends": "sudo",
  "url": "https://github.com/TBemme/galaxy-integration-nds/releases/download/v0.1.0/galaxy-integration-nds-0.1.0.zip",
  "hash": "6ddc4cfc87272509456a62ed0314459d2b1fa443907a370652bc3ff9e9c5ffd4",
  "extract_dir": "nds_81f936fb-39d9-48bc-b2c5-d4d45b80fbd9",
  "extract_to": "integration",
  "notes": [
    "COMPATIBLE EMULATORS:",
    "RetroArch, DeSmuME",
    "NOTES/INSTRUCTIONS FROM THE INTEGRATION DEVELOPER:",
    "Configure the plugin by editing the config.py file, and providing the desired paths and files.",
    "Check https://github.com/TBemme/galaxy-integration-nds for more details..."
  ],
  "uninstaller": {
    "script": "(Get-Item \"$env:LOCALAPPDATA\\GOG.com\\Galaxy\\plugins\\installed\\nds\").Delete()"
  },
  "post_install": [
    "$integration = \"nds\"",
    "$wildcard = \"*nds-*\"",
    "$gi_path = \"$env:LOCALAPPDATA\\GOG.com\\Galaxy\\plugins\\installed\"",
    "$path = \"$gi_path\\$integration\"",
    "$source = \"$scoopdir\\apps\\$app\\current\\integration\"",
    "$link = $true",
    "if (Test-Path $path) {",
    "    $backup_path = \"$persist_dir\\backup\"",
    "    if ($(Get-Item $path | Select-Object -ExpandProperty Target) -eq $source) {",
    "        $link = $false",
    "    } else {",
    "        if (!(Test-Path $persist_dir)) {",
    "            New-Item \"$persist_dir\" -Type Directory | Out-Null",
    "        }",
    "        Move-Item $path $backup_path",
    "        Write-Host \"WARNING:\" -f Yellow",
    "        Write-Host \"Integration directory already exists, I've moved the existing files here:\" -f Yellow",
    "        Write-Host $backup_path -f Red",
    "    }",
    "}",
    "$userRole = New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())",
    "if (!($userRole.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator))) {",
    "    Write-Host \"NOTE:\" -f Yellow",
    "    Write-Host \"This installer can also attach the newly installed integration folder to GOG Galaxy.\" -f Yellow",
    "    Write-Host \"If you choose to do so, you will need to Administrator permission (you'll be asked to approve.)\" -f Yellow",
    "} else {",
    "    $response=\"Y\"",
    "}",
    "$msg = 'Would you like to attach this integration folder to GOG Galaxy programmatically? [Y/N]'",
    "while(\"Y\",\"N\" -notcontains $response) {",
    "    $response =  (Read-Host -Prompt $msg).ToUpper()",
    "}",
    "if ($response -eq \"N\") {",
    "    Write-Host \"No worries! Just make sure you follow these steps:\" -f Yellow",
    "    Write-Host \"1) Open a Command Prompt via (Run as Administrator)\" -f Yellow",
    "    Write-Host \"2) Run:\" -f Yellow",
    "    Write-Host \"mklink /D $([char]0x22)%localappdata%\\GOG.com\\Galaxy\\plugins\\installed\\$integration$([char]0x22) $([char]0x22)$scoopdir\\apps\\$app\\current\\integration$([char]0x22)\" -f Yellow",
    "} elseif ($link) {",
    "    sudo New-Item -ItemType SymbolicLink -Path $path -Target $source 2`>`&1 `> symlink.log",
    "    $installed = Get-ChildItem -Path $gi_path -Depth 0 -Filter $wildcard | % { $_.FullName }",
    "    If ($installed.count -gt 1) {",
    "        Write-Host \"WARNING:\" -f Yellow",
    "        Write-Host \"Installer found multiple integrations installed for $integration, this will likely cause issues with GOG Galaxy...\" -f Yellow",
    "        Write-Host \"Please review the entries below and make sure they are currect:\" -f Yellow",
    "        $installed",
    "        Write-Host \"Here's what you can do:\" -f Yellow",
    "        Write-Host \"1) Keep the '$path'\" -f Yellow",
    "        Write-Host \"2) Backup and remove the additional folders (renaming will not work!)\" -f Yellow",
    "        Write-Host \"3) Restart GOG Galaxy\" -f Yellow",
    "    }",
    "    if ($(Get-Item $path | Select-Object -ExpandProperty Target) -eq $source) {",
    "        Write-Host \"The integration was successfully attached! Make sure to restart GOG Galaxy to make it effective.\" -f Green",
    "    } else {",
    "        Write-Host \"Oops! Something's not right. The $app integration was installed, but the symlink was not possible.\" -f Red",
    "    }",
    "}"
  ],
  "persist": "integration\\config.py",
  "checkver": {
    "github": "https://github.com/TBemme/galaxy-integration-nds"
  },
  "autoupdate": {
    "url": "https://github.com/TBemme/galaxy-integration-nds/releases/download/v$version/galaxy-integration-nds-$version.zip"
  }
}