{
  "version": "1.2.0",
  "description": "cqhttp 的 golang 实现，轻量、原生跨平台.",
  "homepage": "https://github.com/Mrs4s/go-cqhttp",
  "license": "GNU Affero General Public License v3.0",
  "notes": "The CQHTTP configuration files such as \"config.hjson\" and \"device.json\" already generated but not properly set, please modify these files before starting the program",
  "architecture": {
    "64bit": {
      "url": "https://github.com/Mrs4s/go-cqhttp/releases/download/v1.2.0/go-cqhttp_windows_amd64.zip",
      "hash": "4edcd37ced4582d04ffdda46df8d99c498da32772bb0c05ac476518743e7a442"
    },
    "32bit": {
      "url": "https://github.com/Mrs4s/go-cqhttp/releases/download/v1.2.0/go-cqhttp_windows_386.zip",
      "hash": "a6f02e0e1e317a59f5a2561c5cbe5ebafa855e6272080d6a698691d309c04add"
    }
  },
  "bin": "go-cqhttp.exe",
  "pre_install": [
    "if (!(Test-Path \"$persist_dir\\config.hjson\")) {",
    "$cqhttp = @\"",
    "",
    "/*",
    "    go-cqhttp 默认配置文件",
    "*/",
    "",
    "{",
    "    // QQ号",
    "    uin: 0",
    "    // QQ密码",
    "    password: \"\"",
    "    // 是否启用密码加密",
    "    encrypt_password: false",
    "    // 加密后的密码, 如未启用密码加密将为空, 请勿随意修改.",
    "    password_encrypted: \"\"",
    "    // 是否启用内置数据库",
    "    // 启用将会增加10-20MB的内存占用和一定的磁盘空间",
    "    // 关闭将无法使用 撤回 回复 get_msg 等上下文相关功能",
    "    enable_db: true",
    "    // 访问密钥, 强烈推荐在公网的服务器设置",
    "    access_token: \"\"",
    "    // 重连设置",
    "    relogin: {",
    "        // 是否启用自动重连",
    "        // 如不启用掉线后将不会自动重连",
    "        enabled: true",
    "        // 重连延迟, 单位秒",
    "        relogin_delay: 3",
    "        // 最大重连次数, 0为无限制",
    "        max_relogin_times: 0",
    "    }",
    "    // API限速设置",
    "    // 该设置为全局生效",
    "    // 原 cqhttp 虽然启用了 rate_limit 后缀, 但是基本没插件适配",
    "    // 目前该限速设置为令牌桶算法, 请参考: ",
    "    // https://baike.baidu.com/item/%E4%BB%A4%E7%89%8C%E6%A1%B6%E7%AE%97%E6%B3%95/6597000?fr=aladdin",
    "    _rate_limit: {",
    "        // 是否启用限速",
    "        enabled: false",
    "        // 令牌回复频率, 单位秒",
    "        frequency: 1",
    "        // 令牌桶大小",
    "        bucket_size: 1",
    "    }",
    "    // 是否忽略无效的CQ码",
    "    // 如果为假将原样发送",
    "    ignore_invalid_cqcode: false",
    "    // 是否强制分片发送消息",
    "    // 分片发送将会带来更快的速度",
    "    // 但是兼容性会有些问题",
    "    force_fragmented: false",
    "    // 心跳频率, 单位秒",
    "    // -1 为关闭心跳",
    "    heartbeat_interval: 0",
    "    // HTTP设置",
    "    http_config: {",
    "        // 是否启用正向HTTP服务器",
    "        enabled: true",
    "        // 服务端监听地址",
    "        host: 0.0.0.0",
    "        // 服务端监听端口",
    "        port: 5700",
    "        // 反向HTTP超时时间, 单位秒",
    "        // 最小值为5，小于5将会忽略本项设置",
    "        timeout: 0",
    "        // 反向HTTP POST地址列表",
    "        // 格式: ",
    "        // {",
    "        //    地址: secret",
    "        // }",
    "        post_urls: {}",
    "    }",
    "    // 正向WS设置",
    "    ws_config: {",
    "        // 是否启用正向WS服务器",
    "        enabled: true",
    "        // 正向WS服务器监听地址",
    "        host: 0.0.0.0",
    "        // 正向WS服务器监听端口",
    "        port: 6700",
    "    }",
    "    // 反向WS设置",
    "    ws_reverse_servers: [",
    "        // 可以添加多个反向WS推送",
    "        {",
    "            // 是否启用该推送",
    "            enabled: false",
    "            // 反向WS Universal 地址",
    "            // 注意 设置了此项地址后下面两项将会被忽略",
    "            // 留空请使用 \"\"",
    "            reverse_url: ws://you_websocket_universal.server",
    "            // 反向WS API 地址",
    "            reverse_api_url: ws://you_websocket_api.server",
    "            // 反向WS Event 地址",
    "            reverse_event_url: ws://you_websocket_event.server",
    "            // 重连间隔 单位毫秒",
    "            reverse_reconnect_interval: 3000",
    "        }",
    "    ]",
    "    // 上报数据类型",
    "    // 可选: string array",
    "    post_message_format: string",
    "    // 是否使用服务器下发的新地址进行重连",
    "    // 注意, 此设置可能导致在海外服务器上连接情况更差",
    "    use_sso_address: false",
    "    // 是否启用 DEBUG",
    "    debug: false",
    "    // 日志等级 trace,debug,info,warn,error",
    "    log_level: \"info\"",
    "    // WebUi 设置",
    "    web_ui: {",
    "        // 是否启用 WebUi",
    "        enabled: true",
    "        // 监听地址",
    "        host: 127.0.0.1",
    "        // 监听端口",
    "        web_ui_port: 9999",
    "        // 是否接收来自web的输入",
    "        web_input: false",
    "    }",
    "}",
    "\"@ | Out-File $dir\\config.hjson }",
    "if (!(Test-Path \"$persist_dir\\device.json\")) {",
    "$device = @\"",
    "{",
    "    \"protocol\": 0,",
    "    \"display\": \"xxx\",",
    "    \"finger_print\": \"xxx\",",
    "    \"boot_id\": \"xxx\",",
    "    \"proc_version\": \"xxx\",",
    "    \"imei\": \"xxx\"",
    "}",
    "\"@ | Out-File $dir\\device.json }"
  ],
  "persist": [
    "config.hjson",
    "device.json",
    "logs"
  ],
  "checkver": {
    "url": "https://github.com/Mrs4s/go-cqhttp/releases",
    "regex": "href=\"/Mrs4s/go-cqhttp/tree/v(.*?)\""
  },
  "autoupdate": {
    "architecture": {
      "64bit": {
        "url": "https://github.com/Mrs4s/go-cqhttp/releases/download/v$version/go-cqhttp_windows_amd64.zip",
        "hash": {
          "url": "$baseurl/go-cqhttp_checksums.txt"
        }
      },
      "32bit": {
        "url": "https://github.com/Mrs4s/go-cqhttp/releases/download/v$version/go-cqhttp_windows_386.zip",
        "hash": {
          "url": "$baseurl/go-cqhttp_checksums.txt"
        }
      }
    }
  }
}