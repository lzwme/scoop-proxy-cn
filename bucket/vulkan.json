{
  "version": "1.4.321.0",
  "description": "SDK for new generation graphics and compute API",
  "homepage": "https://www.vulkan.org",
  "license": {
    "identifier": "MIT,...",
    "url": "https://vulkan.lunarg.com/license/#/license"
  },
  "notes": [
    "Make sure you have the vulkan driver installed.",
    "Variety of drivers of different graphic card vendors could be found at the bottom of 'https://www.khronos.org/vulkan/'",
    "",
    "Allow vulkan applications to find VK layers provided by Khronos, run \"$dir\\install-vk-layers.ps1\"",
    "(\"powershell \"$dir\\install-vk-layers.ps1\"\" under cmd)"
  ],
  "pre_install": "Remove-Item \"$dir\\`$*\", \"$dir\\Uninstal*\" -Recurse",
  "post_install": [
    "$script_path = \"$bucketsdir\\$bucket\\scripts\\$app\\install-vk-layers.ps1\"",
    "if (Test-Path $script_path) {",
    "   $vulkan_bin = \"$dir\\Bin\"",
    "   $content = Get-Content $script_path",
    "   $content = $content.Replace('$vulkan_bin', \"\"\"$vulkan_bin\"\"\")",
    "   $content = $content.Replace('$global', $(if ($global) { '$true' } else { '$false' }))",
    "   $content = $content.Replace('$is_admin', $(if (is_admin) { '$true' } else { '$false' }))",
    "}",
    "Set-Content -Path \"$dir\\install-vk-layers.ps1\" -Value $content -Encoding UTF8",
    "$UninstallRegistryPath = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\"",
    "$keys = @()",
    "Get-ChildItem -Path $UninstallRegistryPath -Recurse | ForEach-Object {",
    "   $key = $_.Name",
    "   Get-ItemProperty -Path $_.PSPath | ForEach-Object {",
    "      if ($_.PSObject.Properties[\"DisplayName\"].Value.Contains(\"Vulkan SDK\")) {",
    "         $keys += $key",
    "      }",
    "   }",
    "}",
    "foreach ($key in $keys) {",
    "   reg delete $key /va /f",
    "}"
  ],
  "architecture": {
    "64bit": {
      "url": "https://sdk.lunarg.com/sdk/download/1.4.321.0/windows/vulkansdk-windows-X64-1.4.321.0.exe",
      "hash": "14ebc56ef981e03a292adadd2559fbbfcd0289ec157bfd0f0d5f9fdcb40042a9"
    },
    "arm64": {
      "url": "https://sdk.lunarg.com/sdk/download/1.4.321.0/warm/vulkansdk-windows-ARM64-1.4.321.0.exe",
      "hash": "56a47cd99d94e86ea764bb37583248913db3615a5c04f6d81f6cc8f4d31d2dc8"
    }
  },
  "env_add_path": [
    "Bin",
    "Tools"
  ],
  "env_set": {
    "VULKAN_SDK": "$dir",
    "VK_SDK_PATH": "$dir"
  },
  "shortcuts": [
    [
      "Bin\\vkconfig-gui.exe",
      "vkconfig-gui"
    ],
    [
      "Bin\\vulkanCapsViewer.exe",
      "vulkanCapsViewer"
    ]
  ],
  "pre_uninstall": [
    "$reg_root = if ($global) { [Microsoft.Win32.Registry]::LocalMachine } else { [Microsoft.Win32.Registry]::CurrentUser }",
    "$vk_explicit_reg_path = 'SOFTWARE\\Khronos\\Vulkan\\ExplicitLayers'",
    "$bin_dir = 'Bin'",
    "$vulkan_bin = if ($global) { \"$globaldir\\apps\\$app\\current\\$bin_dir\" } else { \"$scoopdir\\apps\\$app\\current\\$bin_dir\" }",
    "$vk_layers = Get-ChildItem -Path $vulkan_bin -Filter '*.json' | ForEach-Object { $_.FullName }",
    "$vk_explicit_reg = $reg_root.CreateSubKey($vk_explicit_reg_path)",
    "foreach ($vk_layer in $vk_layers) {",
    "    $vk_explicit_reg.DeleteValue($vk_layer, $false)",
    "}",
    "$vk_explicit_reg.Close()"
  ],
  "checkver": {
    "url": "https://vulkan.lunarg.com/sdk/latest/windows.json",
    "jsonpath": "$.windows"
  },
  "autoupdate": {
    "architecture": {
      "64bit": {
        "url": "https://sdk.lunarg.com/sdk/download/$version/windows/vulkansdk-windows-X64-$version.exe",
        "hash": {
          "url": "https://vulkan.lunarg.com/sdk/files.json",
          "jsonpath": "$.windows['$version'].files[?(@.file_name == '$basename')].sha"
        }
      },
      "arm64": {
        "url": "https://sdk.lunarg.com/sdk/download/$version/warm/vulkansdk-windows-ARM64-$version.exe",
        "hash": {
          "url": "https://vulkan.lunarg.com/sdk/files.json",
          "jsonpath": "$.warm['$version'].files[?(@.file_name == '$basename')].sha"
        }
      }
    }
  },
  "installer": {
    "args": [
      "--root",
      "$dir",
      "--accept-licenses",
      "--accept-messages",
      "--confirm-command",
      "install",
      "copy_only=1"
    ]
  }
}